server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
	#	try_files $uri $uri/ =404;
	#}

   	 location /ttms/ {
        proxy_pass http://127.0.0.1:8080/ttms/;
        proxy_set_header Content-Length $content_length;
        proxy_set_header Content-Type $content_type;
        proxy_set_body $request_body;

		add_header Access-Control-Allow-Methods *;
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Max-Age 3600;
        add_header Access-Control-Allow-Credentials true;
       	add_header Access-Control-Allow-Headers $http_access_control_request_headers;
        if ($request_method = OPTIONS) {
            return 200;
        }
		proxy_set_header Host $host;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}
