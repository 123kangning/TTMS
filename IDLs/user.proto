syntax = "proto3";
package user;
option go_package = "user";

message BaseResp {
  int64 status_code = 1;
  string status_message = 2;
}
message Page{
  int32 current = 1;//当前页
  int32 PageSize = 2; //一页数据条数
}

message User{
  int64 user_id = 1;   //用户ID
  int32 user_type = 2; //用户类型，1-销售员，2-经理，9-系统管理员
  string user_name = 3; //用户名称
  string password = 4;  //用户密码
}
//创建用户
message CreateUserRequest{
  int32 user_type = 1; //用户类型，1-销售员，2-经理，9-系统管理员
  string user_name = 2; //用户名称
  string password = 3;  //用户密码
}
message CreateUserResponse {
  BaseResp base_resp = 1;
}
//用户登录
message UserLoginRequest{
  string user_name = 1; //用户名称
  string password = 2;  //用户密码
}
message UserLoginResponse{
  BaseResp base_resp = 1;
  string token = 2;
}
//分页获取用户信息
message GetAllUserRequest{
  Page page = 1;
}
message GetAllUserResponse{
  BaseResp base_resp = 1;
  repeated User list = 2;
}
//修改密码
message ChangeUserPasswordRequest{
  string user_name = 1; //用户名称
  string password = 2;  //用户原密码
  string NewPassword = 3;  //用户新密码
}
message ChangeUserPasswordResponse{
  BaseResp base_resp = 1;
}
//删除用户
message DeleteUserRequest{
  string user_name = 1; //用户名称
}
message DeleteUserResponse{
  BaseResp base_resp = 1;
}
//获取用户信息
message GetUserInfoRequest{
  string user_name = 1; //用户名称
}
message GetUserInfoResponse{
  BaseResp base_resp = 1;
  User user = 2;
}


service UserService{
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){}
  rpc UserLogin(UserLoginRequest) returns (UserLoginResponse){}
  rpc GetAllUser(GetAllUserRequest) returns (UserLoginResponse){}
  rpc ChangeUserPassword(ChangeUserPasswordRequest) returns (ChangeUserPasswordResponse){}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse){}
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse){}
}
